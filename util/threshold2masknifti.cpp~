// Oliver Hinds <ohinds@mit.edu> 2008-03-21
// threshold a nifti file and write out a mask

#include<nifti1_io.h>
#include<iostream>

using namespace std;

int main(int argc, char **argv) {
  if(argc != 4) {
    cout << "usage: " << argv[0] << " infile thresh outfile" << endl;
  }

  // get the filenames and threshold
  string infile = argv[1];
  double thresh = atof(argv[2]);
  string outfile = argv[3];

  // read the infile header
  nifti_image *img = nifti_image_read(infile.c_str(), 0);
  if(img == NULL) {
    cerr << "could not open " << infile << " for reading a nifti image"
	 << endl;
    return 1;
  }

  // read the image data
  nifti_image_load(img);

  // save the data

  // threshold
  for(int i = 0; i < img->numvox; i++) {
    if(img->data[i] < threshold) {
      img->data[i] = 0;
    }
  }

  // modify the header to change the filename
  strcpy(img->fname, outfile.c_str());
  

  // debugging
  nifti_image_infodump(img);

  // write the file
  nifti_image_write(img);

  nifti_image_free(img);

  return 0;
}
