This file summarizes the MR image data header that will to be sent
from the scanner to either the MURFI or AFNI real-time analysis
software.

Notes on AFNI compatibility
(http://afni.nimh.nih.gov/pub/dist/doc/program_help/README.realtime.html):
- The only ACQUISITION_TYPE we seem to support is 3D. But this should
  be investigated.
- XYFOV can be obtained from math on pixelSpacing* and
  num{Pixel,Slices}*.
- XYZFIRST is just the position vector.
- XYMATRIX is just numPixels* and numSlices.
- DATUM is computable from datatype
- XYZAXES is computable from the direction of the normal vector

magic: uchar8_t[4]
Must be "ERTI". The header reading code should assert that this string
is always correctly in the header.

version: int64_t
Version identifier of the scanner software sending the images.

manufacturer: uchar8_t[256]
Name of the scanner manufacturer.

pixelSpacingRead: float64_t
pixelSpacingPhase: float64_t
pixelSpacingSlice: float64_t
Pixel spacing in the three orthogonal acquisition directions.

numPixelsRead: int32_t
numPixelsPhase: int32_t
numSlices: int32_t
The number of pixels in the three orthogonal acquisition directions.

currentTR: int32_t
totalTR: int32_t
Current and total expected TRs.

isMosaic: bool
True if the images are sent in a mosaiced format.

datatype: uchar8_t[16]
String specifying the datatype of the associated image data. Valid
values are:
- char8_t
- uchar8_t
- int16_t
- uint16_t
- int32_t
- uint32_t
- float32_t
- float64_t

sagittalPosition: float64_t
coronalPosition: float64_t
transversePosition: float64_t
Vector defining the center of the acquired volume.

sagittalNormal: float64_t
coronalNormal: float64_t
transverseNormal: float64_t
Vector normal to what?

sagittalPhase: float64_t
coronalPhase: float64_t
transversePhase: float64_t
Vector defining a direction?

sagittalRow: float64_t
coronalRow: float64_t
transverseRow: float64_t
Vector defining a direction?

sagittalColumn: float64_t
coronalColumn: float64_t
transverseColumn: float64_t
Vector defining a direction?

isMoCo: bool
True if this volume has been motion corrected.

moCoTranslationX: float64_t
moCoTranslationY: float64_t
moCoTranslationZ: float64_t
Translation motion correction applied.

moCoRotationX: float64_t
moCoRotationY: float64_t
moCoRotationZ: float64_t
Rotation motion correction applied.
